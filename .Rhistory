map
library(readxl)
library(dplyr)
library(tidyverse)
library(leaflet)
library(RColorBrewer)
rehoming <- read_excel("Data/Dogs Trust Rehoming Data.xlsx")
centre_loc <- read_excel("Data/centre_latlon.xlsx")
dog_dedupe <- rehoming %>%
group_by(Animal_Code, Visit_Number) %>%
filter(row_number()==n()) %>%
ungroup()
rehoming_plus <- dplyr::left_join(
x = dog_dedupe,  # to this table...
y = centre_loc,   # ...join this table
by = "Rehoming_Centre"  # on this key
)
rehoming_plus$diff_in_days <- difftime(rehoming_plus$Visit_Date_Out,
rehoming_plus$Visit_Date_In, units = c("days"))
rehoming_plus %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(count=n()) -> breed_grouping
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, lat, lon) %>%
summarise(count=n()) -> centres
colourCount = length(unique(centres$Rehoming_Centre))
getPalette = colorRampPalette(brewer.pal(9, "Spectral"))
pal <- colorFactor(
palette = getPalette(colourCount),
domain = centres$Rehoming_Centre
)
leaflet(data = centres) %>%
addTiles() %>%
addCircleMarkers(lng = ~lon, lat = ~lat, weight = 3,
color = ~pal(Rehoming_Centre),
stroke = TRUE, fillOpacity = 0.5,
radius = ~ifelse(Rehoming_Centre == "Darlington", 6, 10), # could say here if count >1000 then radius x, if count <1000
popup = ~paste0("<h5>", Rehoming_Centre, "</h5>")) %>%
addLegend("bottomleft", pal = pal, values = ~Rehoming_Centre,
title = "Rehoming Centre",
labFormat = labelFormat(prefix = "$"),
opacity = 1
) -> map
map
View(centres)
View(centres)
leaflet(data = centres) %>%
addTiles() %>%
addCircleMarkers(lng = ~lon, lat = ~lat, weight = 3,
color = ~pal(Rehoming_Centre),
stroke = TRUE, fillOpacity = 0.5,
radius = ~ifelse(count => 10000, 6, 10), # could say here if count >1000 then radius x, if count <1000
popup = ~paste0("<h5>", Rehoming_Centre, "</h5>")) %>%
addLegend("bottomleft", pal = pal, values = ~Rehoming_Centre,
title = "Rehoming Centre",
labFormat = labelFormat(prefix = "$"),
opacity = 1
)
leaflet(data = centres) %>%
addTiles() %>%
addCircleMarkers(lng = ~lon, lat = ~lat, weight = 3,
color = ~pal(Rehoming_Centre),
stroke = TRUE, fillOpacity = 0.5,
radius = ~ifelse(count >= 10000, 6, 10), # could say here if count >1000 then radius x, if count <1000
popup = ~paste0("<h5>", Rehoming_Centre, "</h5>")) %>%
addLegend("bottomleft", pal = pal, values = ~Rehoming_Centre,
title = "Rehoming Centre",
#labFormat = labelFormat(prefix = "$"),
opacity = 1
)
View(rehoming_plus)
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, diff_in_days) %>%
summarise(average()) -> centres
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, diff_in_days) %>%
summarise(mean()) -> centres
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, diff_in_days) %>%
summarise(mean(diff_in_days)) -> a
View(a)
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre) %>%
summarise(mean(diff_in_days)) -> a
View(a)
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre) %>%
summarise(mean(diff_in_days)) -> days_to_adopt
View(days_to_adopt)
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(mean(diff_in_days)) -> days_to_adopt
View(days_to_adopt)
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days)),1) -> days_to_adopt
View(days_to_adopt)
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) -> days_to_adopt
View(days_to_adopt)
leaflet(data = centres) %>%
addTiles() %>%
addCircleMarkers(lng = ~lon, lat = ~lat, weight = 3,
color = ~pal(Rehoming_Centre),
stroke = TRUE, fillOpacity = 0.5,
radius = ~ifelse(count >= 1, 6, 10), # could say here if count >1000 then radius x, if count <1000
popup = ~paste0("<h5>", Rehoming_Centre, "</h5>")) %>%
addLegend("bottomleft", pal = pal, values = ~Rehoming_Centre,
title = "Rehoming Centre",
#labFormat = labelFormat(prefix = "$"),
opacity = 1
)
leaflet(data = centres) %>%
addTiles() %>%
addCircleMarkers(lng = ~lon, lat = ~lat, weight = 3,
color = ~pal(Rehoming_Centre),
stroke = TRUE, fillOpacity = 0.5,
radius = ~ifelse(count >= 1, 6, 10), # could say here if count >1000 then radius x, if count <1000
popup = ~paste0("<h5>", Rehoming_Centre, "</h5>")) %>%
addLegend("bottomleft", pal = pal, values = ~Rehoming_Centre,
title = "Rehoming Centre",
#labFormat = labelFormat(prefix = "$"),
opacity = 2
)
View(breed_grouping)
centres %>%
filter(Rehoming_Centre == "Darlington") -> darl
View(darl)
View(days_to_adopt)
days_to_adopt %>%
filter(Rehoming_Centre == "Darlington") -> darl
View(darl)
library(ggplot2)
View(days_to_adopt)
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))")-> days_to_adopt
View(days_to_adopt)
View(breed_grouping)
View(days_to_adopt)
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Kennel_Club_Group)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = pal) +
theme_classic()+
theme(text = element_text(size=18))
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Kennel_Club_Group)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "spectral") +
theme_classic()+
theme(text = element_text(size=18))
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Kennel_Club_Group)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=18))
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Kennel_Club_Group)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=18)) -> chart
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group)-> days_to_adopt
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Kennel_Club_Group)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=18)) -> chart
chart
chart
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=18)) -> chart
chart
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12)) -> chart
days_to_adopt %>%
ggplot(aes(x = Rehoming_Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12))
rehoming_plus %>%
na.omit() %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre)-> days_to_adopt
days_to_adopt %>%
ggplot(aes(x = Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12))
rehoming_plus %>%
na.omit(Rehoming_Centre) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre)-> days_to_adopt
days_to_adopt %>%
ggplot(aes(x = Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12))
rehoming_plus %>%
na.omit(Kennel_Club_Group) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre)-> days_to_adopt
days_to_adopt %>%
ggplot(aes(x = Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12))
days_to_adopt$Breed[is.na(days_to_adopt$Breed)] <- "Unknown"
days_to_adopt$Breed[is.na(days_to_adopt$Breed)] <- "Unknown"
days_to_adopt %>%
ggplot(aes(x = Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12))
View(breed_grouping)
rehoming_plus %>%
na.omit(Kennel_Club_Group, Rehoming_Centre) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre)-> days_to_adopt
View(days_to_adopt)
days_to_adopt %>%
ggplot(aes(x = Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12))
leaflet(data = centres) %>%
addTiles() %>%
addCircleMarkers(lng = ~lon, lat = ~lat, weight = 3,
color = ~pal(Rehoming_Centre),
stroke = TRUE, fillOpacity = 0.5,
radius = ~ifelse(count >= 1, 6, 10), # could say here if count >1000 then radius x, if count <1000
popup = ~paste0("<h5>", Rehoming_Centre, "</h5>")) %>%
addLegend("bottomleft", pal = pal, values = ~Rehoming_Centre,
title = "Rehoming Centre",
#labFormat = labelFormat(prefix = "$"),
opacity = 2
)
rehoming_plus %>%
dplyr::select (Animal_Name, Visit_Reason, Rehoming_Centre,
Animal_Breed, Animal_Sex, diff_in_days) -> rehoming_table
View(days_to_adopt)
sd <- SharedData$new(days_to_adopt)
sd %>%
ggplot(aes(x = Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12)) -> chart
sd
chart
devtools::install_github("ropensci/plotly")
library(plotly)
install.packages("plotly")
library(plotly)
library(ggplot2)
library(readxl)
library(dplyr)
library(tidyverse)
library(leaflet)
library(RColorBrewer)
library(ggplot2)
install.packages("ggplot2")
library(readxl)
library(dplyr)
library(tidyverse)
library(leaflet)
library(RColorBrewer)
library(ggplot2)
library(ggplot2)
library(plotly)
days_to_adopt %>%
plot_ly(aes(x = Centre, y = Mean, fill = Breed)) +
type = "bar")
plot_ly(data = days_to_adopt (aes(x = Centre, y = Mean, fill = Breed)),
type = "bar"))
plot_ly(data = days_to_adopt (aes(x = Centre, y = Mean, fill = Breed))),
type = "bar")
plot_ly(
x = c("giraffes", "orangutans", "monkeys"),
y = c(20, 14, 23),
name = "SF Zoo",
type = "bar"
)
dat <- data.frame(
time = factor(c("Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(14.89, 17.23)
)
View(dat)
p <- ggplot(data=dat, aes(x=time, y=total_bill)) +
geom_bar(stat="identity")
p
p <- ggplotly(p)
p
days_to_adopt %>%
ggplot(aes(x = Centre, y = Mean, fill = Breed)) +
geom_col(position = "dodge") +
scale_fill_brewer(palette = "Spectral") +
theme_classic()+
theme(text = element_text(size=12)) -> p
p
p <- ggplotly(p)
p
# Breed avg chart
plot_ly(data = sd,
x = ~Centre,
y = ~Mean,
type = "bar"
)
sd <- SharedData$new(days_to_adopt)
library(readxl)
library(dplyr)
library(tidyverse)
library(leaflet)
library(RColorBrewer)
library(ggplot2)
library(crosstalk)
rehoming <- read_excel("Data/Dogs Trust Rehoming Data.xlsx")
# Postcode lookups
centre_loc <- read_excel("Data/centre_latlon.xlsx")
# Wrangle
# De-duplicate the data
dog_dedupe <- rehoming %>%
group_by(Animal_Code, Visit_Number) %>%
filter(row_number()==n()) %>%
ungroup()
# Join the postcode lat long data
rehoming_plus <- dplyr::left_join(
x = dog_dedupe,  # to this table...
y = centre_loc,   # ...join this table
by = "Rehoming_Centre"  # on this key
)
# number of days to rehome
rehoming_plus$diff_in_days <- difftime(rehoming_plus$Visit_Date_Out,
rehoming_plus$Visit_Date_In, units = c("days"))
# what about average number of days to rehome per centre. Then a filter
# for each breed using crosstalk
rehoming_plus %>%
na.omit(Kennel_Club_Group, Rehoming_Centre) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre)-> days_to_adopt
# Wrap data frame in SharedData
sd <- SharedData$new(days_to_adopt)
# Breed avg chart
plot_ly(data = sd,
x = ~Centre,
y = ~Mean,
type = "bar"
)
Animals <- c("giraffes", "orangutans", "monkeys")
Animals <- c("giraffes", "orangutans", "monkeys")
SF_Zoo <- c(20, 14, 23)
LA_Zoo <- c(12, 18, 29)
data <- data.frame(Animals, SF_Zoo, LA_Zoo)
View(data)
p <- plot_ly(data, x = ~Animals, y = ~SF_Zoo, type = 'bar', name = 'SF Zoo') %>%
add_trace(y = ~LA_Zoo, name = 'LA Zoo') %>%
layout(yaxis = list(title = 'Count'), barmode = 'group')
p
# Breed avg chart
plot_ly(data = sd,
x = ~Breed,
y = ~Mean,
type = "bar"
) -> chart
chart
plot_ly(data = sd,
x = ~Breed,
y = ~Mean,
color = ~Breed,
type = "bar"
)
View(rehoming_plus)
format(as.Date(rehoming_plus$Visit_Date_In, format="%d/%m/%Y"),"%Y")
rehoming_plus %>%
mutate(Year = format(as.Date(rehoming_plus$Visit_Date_In,
format="%d/%m/%Y"),"%Y")) -> rehoming_plus
View(rehoming_plus)
View(rehoming_plus)
rehoming_plus %>%
na.omit(Kennel_Club_Group, Rehoming_Centre) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre) %>%
filter(Year = "2018")-> days_to_adopt
rehoming_plus %>%
na.omit(Kennel_Club_Group, Rehoming_Centre) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre) %>%
filter(Year == "2018")-> days_to_adopt
rehoming <- read_excel("Data/Dogs Trust Rehoming Data.xlsx")
# Postcode lookups
centre_loc <- read_excel("Data/centre_latlon.xlsx")
# Wrangle
# Create a year column
rehoming_plus %>%
mutate(Year = format(as.Date(rehoming_plus$Visit_Date_In,
format="%d/%m/%Y"),"%Y")) -> rehoming_plus
# De-duplicate the data
dog_dedupe <- rehoming %>%
group_by(Animal_Code, Visit_Number) %>%
filter(row_number()==n()) %>%
ungroup()
# Join the postcode lat long data
rehoming_plus <- dplyr::left_join(
x = dog_dedupe,  # to this table...
y = centre_loc,   # ...join this table
by = "Rehoming_Centre"  # on this key
)
rehoming_plus$diff_in_days <- difftime(rehoming_plus$Visit_Date_Out,
rehoming_plus$Visit_Date_In, units = c("days"))
rehoming_plus %>%
na.omit(Kennel_Club_Group, Rehoming_Centre) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre) %>%
filter(Year == "2018")-> days_to_adopt
View(rehoming_plus)
library(readxl)
library(dplyr)
library(tidyverse)
library(leaflet)
library(RColorBrewer)
library(ggplot2)
library(crosstalk)
library(plotly)
rehoming <- read_excel("Data/Dogs Trust Rehoming Data.xlsx")
centre_loc <- read_excel("Data/centre_latlon.xlsx")
dog_dedupe <- rehoming %>%
group_by(Animal_Code, Visit_Number) %>%
filter(row_number()==n()) %>%
ungroup()
rehoming_plus <- dplyr::left_join(
x = dog_dedupe,  # to this table...
y = centre_loc,   # ...join this table
by = "Rehoming_Centre"  # on this key
)
rehoming_plus$diff_in_days <- difftime(rehoming_plus$Visit_Date_Out,
rehoming_plus$Visit_Date_In, units = c("days"))
rehoming_plus %>%
mutate(Year = format(as.Date(rehoming_plus$Visit_Date_In,
format="%d/%m/%Y"),"%Y")) -> rehoming_plus
View(rehoming_plus)
rehoming_plus %>%
filter(Year == "2018") %>%
na.omit(Kennel_Club_Group, Rehoming_Centre) %>%
group_by(Rehoming_Centre, Kennel_Club_Group) %>%
summarise(round(mean(diff_in_days))) %>%
rename(Mean= "round(mean(diff_in_days))",
Breed = Kennel_Club_Group, Centre = Rehoming_Centre) -> days_to_adopt
View(days_to_adopt)
rehoming <- read_excel("Data/Dogs Trust Rehoming Data.xlsx")
centre_loc <- read_excel("Data/centre_latlon.xlsx")
dog_dedupe <- rehoming %>%
group_by(Animal_Code, Visit_Number) %>%
filter(row_number()==n()) %>%
ungroup()
rehoming_plus <- dplyr::left_join(
x = dog_dedupe,  # to this table...
y = centre_loc,   # ...join this table
by = "Rehoming_Centre"  # on this key
)
View(rehoming_plus)
View(rehoming_plus)
View(rehoming_plus)
